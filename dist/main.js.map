{"version":3,"sources":["./src/app/models/patient.ts","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/services/fhir.service.ts","./src/app/models/molecular-sequence.ts","./src/app/components/gene-expresssion/gene-expresssion.component.ts","./src/app/components/gene-expresssion/gene-expresssion.component.html","./src/app/models/bundle.ts","./src/app/models/server-status.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/models/identifier.ts","./src/app/app.module.ts","./src/app/components/patient-gene-expression/patient-gene-expression.component.ts","./src/app/components/patient-gene-expression/patient-gene-expression.component.html","./src/app/models/color.ts","./src/app/models/condition.ts","./src/app/components/patient-list/patient-list.component.ts","./src/app/components/patient-list/patient-list.component.html","./src/app/components/fhir-server/fhir-server.component.ts","./src/app/components/fhir-server/fhir-server.component.html","./src/app/models/table-head.ts","./src/app/models/observation.ts","./src/app/components/expression-legend/expression-legend.component.ts","./src/app/components/expression-legend/expression-legend.component.html","./src/app/models/coding.ts","./src/app/models/specimen.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Identifier} from './identifier';\n\nexport class Patient {\n  id: number;\n  identifier: Identifier;\n  name: PatientName;\n  telecom: PatientTelecom;\n  gender: string;\n  birthDate: string;\n  address: PatientAddress;\n  maritalStatus: MaritalStatus;\n\n  getName(): string {\n    return this.name.given.join(' ') + ' ' + this.name.family;\n  }\n\n\n\n  constructor(data: any){\n    // console.log(\"Patient:\");\n    // console.log(data);\n    this.id = Number(data.id);\n    this.identifier = new Identifier(data.identifier[0]);\n    this.name = new PatientName(data.name[0]);\n    this.gender = data.gender;\n    this.birthDate = data.birthDate;\n    this.telecom = new PatientTelecom(data.telecom[0]);\n    this.address = new PatientAddress(data.address[0]);\n    this.maritalStatus = new MaritalStatus(data.maritalStatus);\n  }\n\n}\n\n\nexport class PatientName {\n  family: string;\n  given: string[];\n\n  constructor(data: any) {\n    this.family = data.family;\n    this.given = data.given;\n  }\n}\n\nexport class PatientTelecom {\n  system: string;\n  value: string;\n\n  constructor(data: any) {\n    this.system = data.system;\n    this.value = data.value;\n  }\n}\n\nexport class PatientAddress {\n  line: string[];\n  city: string;\n  district: string;\n  state: string;\n  postalCode: string;\n\n  constructor(data) {\n    this.line = data.line;\n    this.city = data.city;\n    this.district = data.district;\n    this.state = data.state;\n    this.postalCode = data.postalCode;\n  }\n}\n\nexport class MaritalStatus {\n  code: string;\n  text: string;\n\n  constructor(data){\n    this.code = data.coding[0].code;\n    this.text = data.text;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <h1 class=\"ml-3 mt-3\">Explore the gene expression of patients stored on a FHIR server</h1>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-md-4\">\n      <h2>Abstract</h2>\n      <p>\n        The characterization of diseases using high-throughput omics technologies has an increasing relevance for individualized treatment decisions.\n        Especially gene expression profiles can capture significant molecular differences that can foster patient stratification and pave the way towards precision medicine.\n        Electronic health records already evolved to capture genomic data within clinical systems and standards like FHIR enable sharing within, and even between institutions.\n      </p>\n      <p>\n        However, FHIR only provides profiles tailored to variations in the molecular sequence.\n        Although expression patterns are neglected in FHIR, they are equally important for decision making.\n      </p>\n      <p>\n        Here we provide an exemplary implementation of gene expression profiles of a microarray analysis of patients with acute myeloid leukemia using an adaption of the FHIR genomics extension.\n        Our results demonstrate how FHIR resources can be facilitated in bioinformatics-based decision support systems or used for the aggregation of molecular genetics data in multi-center clinical trials.\n      </p>\n    </div>\n    <div class=\"col-md-6\">\n      <h2>Gene Expression Data</h2>\n      <p>\n        <small><i>\n          J.-L. C. Mougeot, F. K. Bahrani-Mougeot, P. B. Lockhart, and M. T. Brennan, “Microarray analyses of oral punch biopsies from acute myeloid leukemia (AML) patients treated with chemotherapy,” Oral Surgery, Oral Medicine, Oral Pathology, Oral Radiology, and Endodontology, vol. 112, no. 4, pp. 446–452, Oct. 2011,\n          <a href=\"https://doi.org/10.1016/j.tripleo.2011.05.009\">https://doi.org/10.1016/j.tripleo.2011.05.009</a>.\n        </i></small>\n      </p>\n      <p>\n        The authors made the data  available at the  EBI Expression Atlas portal by the ID <a href=\"https://www.ebi.ac.uk/arrayexpress/experiments/E-GEOD-10746/\">E-GEOD-10746</a>.\n      </p>\n      <p>\n        The data set examines a dose-limiting side effect in patients diagnosed with acute myeloid leukemia (AML) that are treated with chemotherapy.\n        In particular mucositis, a  DNA damage within the oral mucosa caused by the chemotherapy is investigated based on the derived gene expression profiles.\n        The samples are collected from punch buccal biopsies from five AML patients pre- and post-chemotherapy, and three healthy controls for comparison.\n      </p>\n      <p>\n        Microarray analysis was performed using <a href=\"https://www.thermofisher.com/order/catalog/product/900466\"> Human Genome U133 Plus 2.0 Array</a> with\n        <a href=\"https://www.ncbi.nlm.nih.gov/assembly/GCF_000001405.26/\">GRCh38.p13 (Genome Reference Consortium Human Build 38, Ensembl release 99)</a>\n        as reference, followed by a Robust Multichip Average (RMA) normalization of the raw data.\n        Subsequently Linear Models for Microarray data (LIMMA) and Significance Analysis of Microarrays (SAM) was applied to identified genes potentially affected by the presence of AML, or predictive of oral mucositis after chemotherapy.\n      </p>\n      <p>\n        Detailed information about the sample donors was not included in the original data set to preserve  anonymity of the participants, instead we used artificially generated data using\n        <a href=\"https://github.com/synthetichealth/synthea\">Synthea<sup>TM</sup></a> to create Patient resources as reference.\n      </p>\n      <p>\n        We chose this gene expression data set because the conducted analysis represents a typical bioinformatics workflow resulting in several gene expression profiles from the same and different individuals that enable disease classification and patient stratification into risk groups.\n      </p>\n    </div>\n\n  </div>\n\n</div>\n\n\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable, Subscriber, throwError} from 'rxjs';\nimport {catchError, concat, expand, first, map, pluck, retry, tap, toArray, take, mergeMap} from 'rxjs/operators';\nimport {Patient} from '../models/patient';\nimport {Bundle} from '../models/bundle';\nimport {forkJoin} from 'rxjs/internal/observable/forkJoin';\nimport {Specimen} from '../models/specimen';\nimport {MolecularSequence} from '../models/molecular-sequence';\nimport {of} from 'rxjs/internal/observable/of';\nimport {ServerStatus} from '../models/server-status';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FhirService {\n\n  fhirEndpoint: string | undefined;\n  defaultFhirEndpoint = 'http://localhost:8080/fhir/';\n\n  mockDir = 'assets/data/';\n\n  constructor(private http: HttpClient) { }\n\n  setFhirEndpoint(fhirEndpoint: string): Observable<ServerStatus> {\n    this.fhirEndpoint = fhirEndpoint;\n    return this.http.get<Observable<ServerStatus>>(this.fhirEndpoint + '$meta').pipe(\n      catchError(err => of({resourceType: 'Error'})),\n      map(data => new ServerStatus(data, fhirEndpoint))\n    );\n  }\n\n  initServerStatus(): void {\n    if (this.fhirEndpoint === undefined) {\n      this.fhirEndpoint = this.defaultFhirEndpoint;\n    }\n  }\n\n  getServerStatus(): Observable<ServerStatus> {\n    this.initServerStatus();\n    return this.http.get<Observable<ServerStatus>>(this.fhirEndpoint + '$meta').pipe(\n      catchError(err => of({resourceType: 'Error'})),\n      map(data => new ServerStatus(data, this.fhirEndpoint))\n    );\n  }\n\n//   test.subscribe(\n//     res => this.serverAvailable = true,\n//   error => this.serverAvailable = false\n// );\n\n  getPatientById(id: number): Observable<Patient> {\n    return this.getServerStatus().pipe(\n      mergeMap( status => {\n        const url = status.status ? this.fhirEndpoint + 'Patient/' + id : this.mockDir + 'patients/Patient-' + id + '.json';\n        return this.http.get<Observable<Patient>>(url).pipe(\n          map(data => new Patient(data))\n        );\n      })\n    );\n  }\n\n  // getPatients(): Observable<Bundle> {\n  //   return this.http.get<Observable<Bundle>>(this.fhirEndpoint + 'Patient').pipe(\n  //     map(data => new Bundle(data, 'Patient'))\n  //   );\n  // }\n\n  getPatients(): Observable<Bundle> {\n    return this.getServerStatus().pipe(\n      mergeMap( status => {\n        const url = status.status ? this.fhirEndpoint + 'Patient/' : this.mockDir + 'Patients.json';\n        return this.http.get<Observable<Bundle>>(url).pipe(\n          map(data => new Bundle(data, 'Patient'))\n        );\n      })\n    );\n  }\n\n  getConditions(): Observable<Bundle> {\n    return this.getServerStatus().pipe(\n      mergeMap( status => {\n        const url = status.status ? this.fhirEndpoint + 'Condition' : this.mockDir + 'Conditions.json';\n        return this.http.get<Observable<Bundle>>(url).pipe(\n          map(data => new Bundle(data, 'Condition'))\n        );\n      })\n    );\n  }\n\n  // GET http://localhost:8080/fhir/Specimen?subject=Patient/1\n  getSpecimensByPatient(patientId: number): Observable<Bundle> {\n    return this.getServerStatus().pipe(\n      mergeMap( status => {\n        let url = '';\n        if (status.status) {\n          url = this.fhirEndpoint + 'Specimen?subject=Patient%2F' + patientId;\n        } else {\n          url = this.mockDir + 'specimens/Specimen-' + patientId + '.json';\n        }\n        return this.http.get<Observable<Bundle>>(url).pipe(\n          map(data => new Bundle(data, 'Specimen'))\n        );\n      })\n    );\n  }\n\n  getSpecimens(): Observable<Bundle> {\n    return this.getServerStatus().pipe(\n      mergeMap( status => {\n        const url = status.status ? this.fhirEndpoint + 'Specimen' : this.mockDir + 'Specimens.json';\n        return this.http.get<Observable<Bundle>>(url).pipe(\n          map(data => new Bundle(data, 'Specimen'))\n        );\n      })\n    );\n  }\n\n  getObservations(): Observable<Bundle> {\n    return this.http.get<Observable<Bundle>>(this.fhirEndpoint + 'Observation').pipe(\n      map(data => new Bundle(data, 'Observation'))\n    );\n  }\n\n  getObservationsByReference(molecularSequenceId: number, patientId = -1): Observable<Bundle> {\n    // derivedFrom MolecularSequence/20717\n    // subject Patient/1\n    // http://localhost:8080/fhir/Observation?derived-from=20717&subject=2&_pretty=true\n    return this.getServerStatus().pipe(\n      mergeMap( status => {\n        let url = this.fhirEndpoint + 'Observation?derived-from=' + molecularSequenceId;\n        if (status.status) {\n          if (patientId >= 0) {\n            url += '&subject=' + patientId;\n          }\n        } else {\n          if (patientId >= 0) {\n            url = this.mockDir + 'observations/Observation-' + molecularSequenceId + '-' + patientId + '.json';\n          } else {\n            url = this.mockDir + 'observations/Observation-' + molecularSequenceId + '.json';\n          }\n        }\n        return this.http.get<Observable<Bundle>>(url).pipe(\n          map(data => new Bundle(data, 'Observation'))\n        );\n      })\n    );\n  }\n\n  getMolecularSequences(offset = 0, count = 12, isGeneSymbol = true, searchTerms = []): Observable<Bundle> {\n    return this.getServerStatus().pipe(\n      mergeMap( status => {\n        let url = this.fhirEndpoint + 'MolecularSequence?_count=' + count + '&_getpagesoffset=' + offset * count;\n        if (status.status) {\n          if (searchTerms.length !== 0){\n            url += isGeneSymbol ? '&identifier=gene_symbol%7C' : '&identifier=ensemble_id%7C';\n            url += searchTerms.join('%2C');\n          }\n        } else {\n          url = this.mockDir + 'MolecularSequences.json';\n        }\n\n        return this.http.get<Observable<Bundle>>(url).pipe(\n          map(data => new Bundle(data, 'MolecularSequence'))\n        );\n      })\n    );\n  }\n\n  getPCSMS(): Observable<{patients: Bundle, conditions: Bundle, specimens: Bundle}> {\n    return forkJoin({\n      patients: this.getPatients(),\n      conditions: this.getConditions(),\n      specimens: this.getSpecimens()\n    });\n  }\n}\n\n\n","import {Identifier} from './identifier';\nimport {Coding} from './coding';\nimport {Observation} from './observation';\n\nexport class MolecularSequence {\n  id: number;\n  ensembl: string;\n  ensemblUrl: string;\n  geneSymbol: string;\n  chromosome: Coding;\n  orientation: string;\n  start: number;\n  end: number;\n\n  observations = {};\n  oloaded = false;\n\n  setObservations(observations: Observation[]): void{\n    observations.forEach(o => {\n      this.observations[o.specimen] = o;\n    });\n    this.oloaded = true;\n  }\n\n  constructor(data){\n    this.id = Number(data.id);\n    data.identifier.forEach(i => {\n      if (i.system === 'ensemble_id'){\n        this.ensembl = i.value;\n      }else if (i.system === 'gene_symbol'){\n        this.geneSymbol = i.value;\n      }\n    });\n    this.chromosome = new Coding(data.referenceSeq.chromosome.coding[0]);\n    this.orientation = data.referenceSeq.orientation;\n    this.start = Number(data.referenceSeq.windowStart);\n    this.end = Number(data.referenceSeq.windowEnd);\n    this.ensemblUrl = data.repository[0].url;\n    // console.log(this);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {FhirService} from '../../services/fhir.service';\nimport {Patient} from '../../models/patient';\nimport {Specimen} from '../../models/specimen';\nimport {MolecularSequence} from '../../models/molecular-sequence';\nimport {ActivatedRoute} from '@angular/router';\nimport {Observation} from '../../models/observation';\nimport {Condition} from '../../models/condition';\nimport {TableHead} from '../../models/table-head';\nimport {ServerStatus} from '../../models/server-status';\n\n@Component({\n  selector: 'app-gene-expresssion',\n  templateUrl: './gene-expresssion.component.html',\n  styleUrls: ['./gene-expresssion.component.css']\n})\nexport class GeneExpresssionComponent implements OnInit {\n\n  serverStatus: ServerStatus | undefined;\n\n  patients: Patient[] | undefined;\n  conditions: Condition[] = [];\n  specimens: Specimen[] | undefined;\n\n  tableHead: TableHead = new TableHead('conditions');\n\n  molecularSequence: MolecularSequence[] | undefined;\n  hasPrevious = false;\n  hasNext = false;\n  isLoading = true;\n  showPagination = true;\n  offset =  0;\n  searchTermPlaceholder = 'EGFR TSPAN6 ENSG00000002330 CDKN2A CDKN2B SSX1';\n  searchTerm = '';\n\n  constructor(private route: ActivatedRoute, private fhirService: FhirService) { }\n\n  ngOnInit(): void {\n    this.isLoading = true;\n\n    this.fhirService.getServerStatus().subscribe(status => {\n        this.serverStatus = status;\n      }\n    );\n\n    this.fhirService.getPCSMS().subscribe(obj => {\n      this.tableHead.get('None');\n      this.conditions = obj.conditions.entries as Condition[];\n      this.specimens = obj.specimens.entries as Specimen[];\n      this.patients = obj.patients.entries as Patient[];\n      this.patients.forEach( p => {\n        const c = this.getConditonById(p.id);\n        const specimen: Specimen[] = this.getSpecimenById(p.id);\n        specimen.forEach( s => {\n          const patient = this.tableHead.get(c).get(s.note).get(p.getName());\n          patient.patientId = p.id;\n          patient.specimenId = s.id;\n        });\n      });\n\n      // console.log('TableHead:');\n      // console.log(this.tableHead);\n      // this.tableHead.children.forEach(c => console.log(c.getColspan()));\n    });\n\n    this.getMolecularSequences();\n  }\n\n  getSpecimenById(id: number): Specimen[] {\n    return this.specimens.filter((s: Specimen) => s.subject === id);\n  }\n\n  getConditonById(id: number): string {\n    const condition = this.conditions.filter((c: Condition) => c.subject === id);\n    return condition.length === 0 ? 'None' : condition[0].code.display;\n  }\n\n\n  next(): void {\n    if (this.hasNext && !this.isLoading){\n      this.isLoading = true;\n      this.getMolecularSequences(this.offset + 1);\n    }\n  }\n\n  previous(): void {\n    if (this.hasPrevious && !this.isLoading) {\n      this.isLoading = true;\n      this.getMolecularSequences(this.offset - 1);\n    }\n  }\n\n  example(): void {\n    this.searchTerm = this.searchTermPlaceholder;\n    this.search();\n  }\n\n  search(): void {\n    // console.log(this.searchTerm);\n    this.showPagination = false;\n    const geneSymbols = [];\n    const ensembleIds = [];\n    this.searchTerm.toUpperCase().split(/[ ,\\t]+/).forEach(t => {\n      if (/ENSG[0-9]{11}/.test(t)){\n        ensembleIds.push(t);\n      }else{\n        geneSymbols.push(t);\n      }\n    });\n\n    if ((geneSymbols.length !== 0 ) || (ensembleIds.length !== 0)) {\n      this.molecularSequence = [];\n      if (geneSymbols.length !== 0) {\n        this.addMolecularSequences(0, true, geneSymbols);\n      }\n      if (ensembleIds.length !== 0) {\n        this.addMolecularSequences(0, false, ensembleIds);\n      }\n      this.hasNext = false;\n      this.hasPrevious = false;\n    }\n  }\n\n\n  getMolecularSequences(offset = 0): void {\n    // console.log('Get: offset=' + offset);\n    this.showPagination = true;\n    this.molecularSequence = [];\n    this.addMolecularSequences(offset);\n  }\n\n  addMolecularSequences(offset = 0, isGeneSymbol = true, searchTerms = []): void {\n    // console.log('Get: offset=' + offset);\n\n    offset = isNaN(Number(offset)) ? 0 : Number(offset);\n    offset = offset < 0 ? 0 : offset;\n\n    const ccount = searchTerms.length !== 0 ? searchTerms.length + 12 : 12;\n\n    this.fhirService.getMolecularSequences(offset, ccount, isGeneSymbol, searchTerms)\n      .subscribe((data) => {\n        // console.log('add mol seq: ' + this.molecularSequence);\n\n        this.hasNext = data.next !== undefined;\n        this.hasPrevious = data.previous !== undefined;\n        this.offset = offset;\n\n        (data.entries as MolecularSequence[]).forEach(m => {\n          this.molecularSequence.push(m);\n          this.fhirService.getObservationsByReference(m.id).subscribe(obs => {\n            const observations = obs.entries as Observation[];\n            const orderedObservations: Observation[] = [];\n            this.tableHead.children.forEach(condition => {\n              condition.children.forEach( specimen => {\n                specimen.children.forEach( patient => {\n                  orderedObservations.push(observations.filter(o => {\n                    return o.specimen === patient.specimenId && o.subject === patient.patientId;\n                  })[0]);\n                });\n              });\n            });\n            m.setObservations(orderedObservations);\n            // console.log(m.observations);\n          });\n        });\n        // console.log(this.molecularSequence);\n        this.isLoading = false;\n      });\n  }\n\n}\n","<ng-template #loading>\n  <h1><strong>loading\n    <div class=\"spinner-border\" role=\"status\">\n      <span class=\"sr-only\"></span>\n    </div>\n  </strong></h1>\n</ng-template>\n\n\n<div *ngIf=\"tableHead.children.length > 0 else loading\">\n  <div class=\"container-fluid\">\n\n    <div class=\"row h1 mt-3\">Gene expression heatmap of all patients\n      <ng-template [ngIf]=\"serverStatus && !serverStatus.status\">\n        &nbsp;<small><i>(Example data)</i></small>\n      </ng-template>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-5 mt-4 ml-0\">\n        <div class=\"form-group input-group\">\n          <input\n            type=\"text\" class=\"form-control\" id=\"searchTerm\"\n            [(ngModel)]=\"searchTerm\"\n            name=\"searchTerm\"\n            placeholder=\"{{searchTermPlaceholder}}\"\n            (keyup.enter)=\"search()\">\n          <div class=\"input-group-append\" id=\"button-addon4\">\n            <button class=\"btn btn-secondary\" (click)=\"example()\">Example</button>\n            <button class=\"btn btn-primary\" (click)=\"search()\">Search</button>\n          </div>\n        </div>\n        <small id=\"searchTermHelp\" class=\"form-text text-muted ml-1\">Type gene symbols or enseble ids seperated by spaces or commas.</small>\n      </div>\n      <div class=\"col-md-1 mt-4\">\n        <button class=\"btn btn-primary\" (click)=\"getMolecularSequences()\">Browse</button>\n      </div>\n\n      <app-expression-legend class=\"col-md-3  offset-md-1\"></app-expression-legend>\n    </div>\n\n\n    <div *ngIf=\"true\" class=\"row mt-2\">\n      <table class=\"table table-bordered table-sm w-auto\">\n        <thead>\n        <tr>\n          <th scope=\"col\" rowspan=\"3\">#</th>\n          <th scope=\"col\" rowspan=\"3\">ENSEMBL</th>\n          <th scope=\"col\" rowspan=\"3\">Gene symbol</th>\n          <ng-template ngFor let-condition [ngForOf]=\"tableHead.children\">\n            <th [colSpan]=\"condition.getColspan()\">{{condition.name}}</th>\n          </ng-template>\n        </tr>\n        <tr>\n          <ng-template ngFor let-condition [ngForOf]=\"tableHead.children\">\n            <ng-template ngFor let-specimen [ngForOf]=\"condition.children\">\n              <th [colSpan]=\"specimen.getColspan()\">{{specimen.name}}</th>\n            </ng-template>\n          </ng-template>\n        </tr>\n        <tr>\n          <ng-template ngFor let-condition [ngForOf]=\"tableHead.children\">\n            <ng-template ngFor let-specimen [ngForOf]=\"condition.children\">\n              <ng-template ngFor let-patient [ngForOf]=\"specimen.children\">\n                <th [colSpan]=\"patient.getColspan()\">{{patient.name}}</th>\n              </ng-template>\n            </ng-template>\n          </ng-template>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let molSeq of molecularSequence\">\n          <th scope=\"row\">{{molSeq.id}}</th>\n          <td><a href=\"{{molSeq.ensemblUrl}}\" target=\"_blank\">{{molSeq.ensembl}}</a></td>\n          <td>{{molSeq.geneSymbol}}</td>\n          <ng-template [ngIf]=\"molSeq.oloaded\">\n            <ng-template ngFor let-condition [ngForOf]=\"tableHead.children\">\n              <ng-template ngFor let-specimen [ngForOf]=\"condition.children\">\n                <ng-template ngFor let-patient [ngForOf]=\"specimen.children\">\n                  <td style=\"background-color: {{molSeq.observations[patient.specimenId].color}}\">{{molSeq.observations[patient.specimenId].value}}</td>\n                </ng-template>\n              </ng-template>\n            </ng-template>\n          </ng-template>\n          <ng-template [ngIf]=\"! molSeq.oloaded\"><td *ngFor=\"let spec of specimens\" style=\" text-align: center;\">\n            <div class=\"spinner-border\" role=\"status\" style=\"height: 1em; width: 1em;\">\n              <span class=\"sr-only\"></span>\n            </div>\n          </td></ng-template>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <div class=\"row mb-5\" [hidden]=\"!showPagination\">\n      <div class=\"col-md-1 my-1\">\n        <div class=\"btn\" [ngClass]=\"{'disabled': isLoading, 'btn-secondary': !hasPrevious, 'btn-primary': hasPrevious}\" (click)=\"previous()\">Previous</div>\n      </div>\n      <div class=\"col-md-2 mt-1\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\" id=\"inputGroup-sizing-default\">Go to Page</span>\n          </div>\n          <input type=\"text\" class=\"form-control\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-default\" [(ngModel)]=\"offset\" (keyup.enter)=\"getMolecularSequences(offset)\">\n        </div>\n\n      </div>\n      <div class=\"col-md-1 my-1\">\n        <div class=\"btn\" [ngClass]=\"{'disabled': isLoading, 'btn-secondary': !hasNext, 'btn-primary': hasNext}\" (click)=\"next()\">Next</div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Patient} from './patient';\nimport {Condition} from './condition';\nimport {Specimen} from './specimen';\nimport {Observable} from 'rxjs';\nimport {Observation} from './observation';\nimport {MolecularSequence} from './molecular-sequence';\n\nexport class Bundle {\n  total: number;\n  entries: Patient[] | Condition[] | Specimen[] | Observation[] | MolecularSequence[];\n  previous: string = undefined;\n  next: string = undefined;\n\n  constructor(data: any, resourceType: string){\n    // console.log('Bundle:');\n    // console.log(data);\n    this.total = data.number;\n\n    data.link.forEach(l => {\n      if (l.relation === 'next') {\n        this.next = l.url;\n      }else if (l.relation === 'previous') {\n        this.previous = l.url;\n      }\n    });\n\n    if (data.entry !== undefined) {\n      this.entries = data.entry.map(e => {\n          // console.log('Create Entry:');\n          // console.log(e);\n          if (resourceType === 'Patient') {\n            return new Patient(e.resource);\n          } else if (resourceType === 'Condition') {\n            return new Condition(e.resource);\n          } else if (resourceType === 'Specimen') {\n            return new Specimen(e.resource);\n          } else if (resourceType === 'Observation') {\n            return new Observation(e.resource);\n          } else if (resourceType === 'MolecularSequence') {\n            return new MolecularSequence(e.resource);\n          }\n        }\n      );\n    } else {\n      this.entries = [];\n    }\n  }\n}\n","export class ServerStatus {\n  status = false;\n  fhirEndpoint: string;\n\n  constructor(status: any, fhirEndpoint){\n    this.fhirEndpoint = fhirEndpoint;\n    if (status.resourceType === 'Error') {\n      this.status = false;\n    } else {\n      this.status = true;\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport {FhirService} from './services/fhir.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'web-app';\n}\n","<div id=\"header\" class=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0 shadow\">\n<!--  <a class=\"navbar-brand\" href=\"https://www.uni-augsburg.de/de/fakultaet/fai/informatik/prof/misit/\" target=\"_blank\">-->\n<!--    <img src=\"assets/img/MISIT.png\" alt=\"Lehrstuhl für IT-Infrastrukturen für die Translationale Medizinische Forschung\" height=\"27\" style=\"margin-left: 20px\">&nbsp;MISIT-->\n<!--  </a>-->\n  <a class=\"navbar-brand col-md-3 col-lg-2 me-0 px-3\" href=\"https://www.uni-augsburg.de/de/fakultaet/fai/informatik/prof/misit/\" target=\"_blank\">\n    FHIR Gene Expression Explorer\n<!--    &nbsp;-->\n<!--    <i class=\"topbarIcon\" data-fa-i2svg=\"\">-->\n<!--      <svg class=\"svg-inline&#45;&#45;fa fa-fire fa-w-12\" style=\"height: 20px;color: red;\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"fire\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-fa-i2svg=\"\"><path fill=\"currentColor\" d=\"M216 23.86c0-23.8-30.65-32.77-44.15-13.04C48 191.85 224 200 224 288c0 35.63-29.11 64.46-64.85 63.99-35.17-.45-63.15-29.77-63.15-64.94v-85.51c0-21.7-26.47-32.23-41.43-16.5C27.8 213.16 0 261.33 0 320c0 105.87 86.13 192 192 192s192-86.13 192-192c0-170.29-168-193-168-296.14z\"></path></svg>-->\n<!--    </i>-->\n<!--    &nbsp; HAPI FHIR Server-->\n  </a>\n<!--  <a class=\"nav-link disabled\" href=\"#\" >http://localhost:8080/fhir/</a>-->\n\n  <a class=\"nav-item text-nowrap\">\n    <a class=\"navbar-brand\" href=\"http://localhost:8080\" target=\"_blank\">\n      <img src=\"assets/img/MISIT.png\" alt=\"Lehrstuhl für IT-Infrastrukturen für die Translationale Medizinische Forschung\" height=\"27\" style=\"margin-left: 20px\" />\n      &nbsp;MISIT - Augsburg University\n\n    </a>\n  </a>\n\n<!--  <a class=\"nav-item text-nowrap\">-->\n<!--    <a class=\"navbar-brand\" href=\"http://localhost:8080/fhir\" target=\"_blank\">-->\n<!--      &nbsp;-->\n<!--      <i class=\"topbarIcon\" data-fa-i2svg=\"\"><svg class=\"svg-inline&#45;&#45;fa fa-fire fa-w-12\" style=\"height: 20px;\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"fire\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-fa-i2svg=\"\"><path fill=\"currentColor\" d=\"M216 23.86c0-23.8-30.65-32.77-44.15-13.04C48 191.85 224 200 224 288c0 35.63-29.11 64.46-64.85 63.99-35.17-.45-63.15-29.77-63.15-64.94v-85.51c0-21.7-26.47-32.23-41.43-16.5C27.8 213.16 0 261.33 0 320c0 105.87 86.13 192 192 192s192-86.13 192-192c0-170.29-168-193-168-296.14z\"></path></svg></i>-->\n<!--      &nbsp; FHIR Swagger-->\n<!--    </a>-->\n<!--  </a>-->\n</div>\n\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <nav id=\"sidebarMenu\" class=\"col-md-3 col-lg-2 d-md-block bg-light sidebar \">\n      <div class=\"sidebar-sticky pt-3\">\n        <ul class=\"nav flex-column\">\n          <li class='nav-item'>\n            <a class='nav-link' routerLink='/' routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">Home</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/patients\" routerLinkActive=\"active\">Patients</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/expression\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">Gene Expression</a>\n          </li>\n\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/server\" routerLinkActive=\"active\">FHIR server</a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n\n    <main class=\"col-md-9 ml-sm-auto col-lg-10 px-md-4\">\n      <router-outlet></router-outlet>\n\n    </main>\n  </div>\n</div>\n<div id=\"footer\" class=\"bg-light text-center text-lg-start fixed-bottom\">\n  <!-- Copyright -->\n  <div class=\"text-center\">\n    © 2022 Florian Auer:\n    <a class=\"text-dark\" href=\"https://github.com/frankkramer-lab/gene-expression-on-fhir/\">GIT Source Code</a>\n  </div>\n  <!-- Copyright -->\n</div>\n\n\n","export class Identifier {\n  system: string;\n  value: string;\n\n  constructor(data){\n    this.system = data.system;\n    this.value = data.value;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { PatientListComponent } from './components/patient-list/patient-list.component';\nimport {RouterModule} from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { PatientGeneExpressionComponent } from './components/patient-gene-expression/patient-gene-expression.component';\nimport { GeneExpresssionComponent } from './components/gene-expresssion/gene-expresssion.component';\nimport { ExpressionLegendComponent } from './components/expression-legend/expression-legend.component';\nimport {FormsModule} from '@angular/forms';\nimport { FhirServerComponent } from './components/fhir-server/fhir-server.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PatientListComponent,\n    HomeComponent,\n    PatientGeneExpressionComponent,\n    GeneExpresssionComponent,\n    ExpressionLegendComponent,\n    FhirServerComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      {path: '', component: HomeComponent},\n      {path: 'server', component: FhirServerComponent},\n      {path: 'patients', component: PatientListComponent},\n      {path: 'expression', component: GeneExpresssionComponent},\n      {path: 'expression/:id', component: PatientGeneExpressionComponent}\n    ]),\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ParamMap} from '@angular/router';\nimport {switchMap} from 'rxjs/internal/operators/switchMap';\nimport {Patient} from '../../models/patient';\nimport {Specimen} from '../../models/specimen';\nimport {FhirService} from '../../services/fhir.service';\nimport {MolecularSequence} from '../../models/molecular-sequence';\nimport {Observation} from '../../models/observation';\nimport {map} from 'rxjs/operators';\nimport {ServerStatus} from '../../models/server-status';\n\n@Component({\n  selector: 'app-patient-gene-expression',\n  templateUrl: './patient-gene-expression.component.html',\n  styleUrls: ['./patient-gene-expression.component.css']\n})\nexport class PatientGeneExpressionComponent implements OnInit {\n\n  id: number;\n  serverStatus: ServerStatus | undefined;\n  patient: Patient | undefined;\n  specimens: Specimen[] | undefined;\n  molecularSequence: MolecularSequence[] | undefined;\n  hasPrevious = false;\n  hasNext = false;\n  isLoading = true;\n  showPagination = true;\n  offset =  0;\n  searchTermPlaceholder = 'EGFR TSPAN6 ENSG00000002330 CDKN2A CDKN2B SSX1';\n  searchTerm = '';\n\n  constructor(private route: ActivatedRoute, private fhirService: FhirService) { }\n\n  ngOnInit(): void {\n    this.id = Number(this.route.snapshot.paramMap.get('id'));\n\n    this.fhirService.getServerStatus().subscribe(status => {\n        this.serverStatus = status;\n      }\n    );\n\n    this.isLoading = true;\n\n    this.fhirService.getPatientById(this.id).subscribe((pat) => {\n      this.patient = pat;\n    });\n\n    this.fhirService.getSpecimensByPatient(this.id).subscribe((data) => {\n      this.specimens = data.entries as Specimen[];\n      // console.log(this.specimens);\n    });\n\n    this.getMolecularSequences();\n  }\n\n  next(): void {\n    if (this.hasNext && !this.isLoading){\n      this.isLoading = true;\n      this.getMolecularSequences(this.offset + 1);\n    }\n  }\n\n  previous(): void {\n    if (this.hasPrevious && !this.isLoading) {\n      this.isLoading = true;\n      this.getMolecularSequences(this.offset - 1);\n    }\n  }\n\n  example(): void {\n    this.searchTerm = this.searchTermPlaceholder;\n    this.search();\n  }\n\n  search(): void {\n    // console.log(this.searchTerm);\n    this.showPagination = false;\n    const geneSymbols = [];\n    const ensembleIds = [];\n    this.searchTerm.toUpperCase().split(/[ ,\\t]+/).forEach(t => {\n      if (/ENSG[0-9]{11}/.test(t)){\n        ensembleIds.push(t);\n      }else{\n        geneSymbols.push(t);\n      }\n    });\n\n    if ((geneSymbols.length !== 0 ) || (ensembleIds.length !== 0)) {\n      this.molecularSequence = [];\n      if (geneSymbols.length !== 0) {\n        this.addMolecularSequences(0, true, geneSymbols);\n      }\n      if (ensembleIds.length !== 0) {\n        this.addMolecularSequences(0, false, ensembleIds);\n      }\n      this.hasNext = false;\n      this.hasPrevious = false;\n    }\n  }\n\n\n  getMolecularSequences(offset = 0): void {\n    // console.log('Get: offset=' + offset);\n    this.showPagination = true;\n    this.molecularSequence = [];\n    this.addMolecularSequences(offset);\n  }\n\n\n  addMolecularSequences(offset = 0, isGeneSymbol = true, searchTerms = []): void {\n    // console.log('Get: offset=' + offset);\n\n    offset = isNaN(Number(offset)) ? 0 : Number(offset);\n    offset = offset < 0 ? 0 : offset;\n\n    const ccount = searchTerms.length !== 0 ? searchTerms.length + 12 : 12;\n\n    this.fhirService.getMolecularSequences(offset, ccount, isGeneSymbol, searchTerms)\n      .subscribe((data) => {\n        // console.log('add mol seq: ' + this.molecularSequence);\n\n        this.hasNext = data.next !== undefined;\n        this.hasPrevious = data.previous !== undefined;\n        this.offset = offset;\n\n        (data.entries as MolecularSequence[]).forEach(m => {\n          this.molecularSequence.push(m);\n          this.fhirService.getObservationsByReference(m.id, this.id).subscribe(obs => {\n            m.setObservations(obs.entries as Observation[]);\n            // console.log(m.observations);\n          });\n        });\n        // console.log(this.molecularSequence);\n        this.isLoading = false;\n    });\n  }\n}\n","<ng-template #loading>\n  <h1><strong>loading\n    <div class=\"spinner-border\" role=\"status\">\n      <span class=\"sr-only\"></span>\n    </div>\n  </strong></h1>\n</ng-template>\n\n\n<div *ngIf=\"patient else loading\">\n\n  <div class=\"container-fluid\">\n\n    <div class=\"row h1 mt-3\">Gene expression of <strong class=\"mx-2\"> {{patient.getName()}} </strong>({{patient.gender}})\n      <ng-template [ngIf]=\"serverStatus && !serverStatus.status\">\n        &nbsp;<small><i>(Example data)</i></small>\n      </ng-template>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-5 mt-4 ml-0\">\n        <div class=\"form-group input-group\">\n          <input\n            type=\"text\" class=\"form-control\" id=\"searchTerm\"\n            [(ngModel)]=\"searchTerm\"\n            name=\"searchTerm\"\n            placeholder=\"{{searchTermPlaceholder}}\"\n            (keyup.enter)=\"search()\">\n          <div class=\"input-group-append\" id=\"button-addon4\">\n            <button class=\"btn btn-secondary\" (click)=\"example()\">Example</button>\n            <button class=\"btn btn-primary\" (click)=\"search()\">Search</button>\n          </div>\n        </div>\n        <small id=\"searchTermHelp\" class=\"form-text text-muted ml-1\">Type gene symbols or enseble ids seperated by spaces or commas.</small>\n      </div>\n      <div class=\"col-md-1 mt-4\">\n        <button class=\"btn btn-primary\" (click)=\"getMolecularSequences()\">Browse</button>\n      </div>\n      <app-expression-legend class=\"col-md-3  offset-md-1\"></app-expression-legend>\n    </div>\n\n\n    <div *ngIf=\"molecularSequence.length === 0\" class=\"row mt-2\">\n      <h3><i>nothing found</i></h3>\n    </div>\n\n    <div *ngIf=\"molecularSequence.length !== 0\" class=\"row mt-2\">\n      <table class=\"table table-sm w-auto\">\n        <thead>\n        <tr>\n          <th scope=\"col\">#</th>\n          <th scope=\"col\">ENSEMBL</th>\n          <th scope=\"col\">Gene symbol</th>\n          <th scope=\"col\" *ngFor=\"let spec of specimens\">{{spec.note}}</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let molSeq of molecularSequence\">\n          <th scope=\"row\">{{molSeq.id}}</th>\n          <td><a href=\"{{molSeq.ensemblUrl}}\" target=\"_blank\">{{molSeq.ensembl}}</a></td>\n          <td>{{molSeq.geneSymbol}}</td>\n          <ng-template [ngIf]=\"molSeq.oloaded\"><td *ngFor=\"let spec of specimens\" style=\"background-color: {{molSeq.observations[spec.id].color}}\">{{molSeq.observations[spec.id].value}}</td></ng-template>\n          <ng-template [ngIf]=\"! molSeq.oloaded\"><td *ngFor=\"let spec of specimens\" style=\" text-align: center;\">\n            <div class=\"spinner-border\" role=\"status\" style=\"height: 1em; width: 1em;\">\n              <span class=\"sr-only\"></span>\n            </div>\n          </td></ng-template>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n    <div class=\"row mb-5\" [hidden]=\"!showPagination\">\n      <div class=\"col-md-1 my-1\">\n        <div class=\"btn\" [ngClass]=\"{'disabled': isLoading, 'btn-secondary': !hasPrevious, 'btn-primary': hasPrevious}\" (click)=\"previous()\">Previous</div>\n      </div>\n      <div class=\"col-md-2 mt-1\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\" id=\"inputGroup-sizing-default\">Go to Page</span>\n          </div>\n          <input type=\"text\" class=\"form-control\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-default\" [(ngModel)]=\"offset\" (keyup.enter)=\"getMolecularSequences(offset)\">\n        </div>\n\n      </div>\n      <div class=\"col-md-1 my-1\">\n        <div class=\"btn\" [ngClass]=\"{'disabled': isLoading, 'btn-secondary': !hasNext, 'btn-primary': hasNext}\" (click)=\"next()\">Next</div>\n      </div>\n    </div>\n  </div>\n</div>\n","export class Color {\n  // 0=>100, 10=>55\n  static minL = 55;\n  static maxL = 100;\n\n  public static getColor(value: number): string {\n    const restL = Color.maxL - Color.minL;\n    const l = restL - Math.round((restL / 10) * value) + Color.minL;\n    return 'hsl(216, 100%, ' + l + '%)';\n  }\n}\n","import {Identifier} from './identifier';\nimport {Coding} from './coding';\nimport {Patient} from './patient';\n\nexport class Condition {\n  id: string;\n  identifier: Identifier;\n  code: Coding;\n  subject: number;\n\n  constructor(data){\n    this.id = data.id;\n    this.identifier = data.identifier[0];\n    this.code = new Coding(data.code.coding[0]);\n    this.subject = data.subject.reference;\n    this.subject = Number(data.subject.reference.split('/').pop());\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {Patient} from '../../models/patient';\nimport {FhirService} from '../../services/fhir.service';\nimport {Specimen} from '../../models/specimen';\nimport {Condition} from '../../models/condition';\nimport {ServerStatus} from '../../models/server-status';\n\n@Component({\n  selector: 'app-patient-list',\n  templateUrl: './patient-list.component.html',\n  styleUrls: ['./patient-list.component.css']\n})\nexport class PatientListComponent implements OnInit {\n\n  constructor(private fhirService: FhirService) { }\n\n  patients: Patient[] | undefined;\n  specimens: Specimen[] | undefined;\n  conditions: Condition[] | undefined;\n\n  serverStatus: ServerStatus | undefined;\n\n  getSpecimenById(id: number): Specimen[] {\n    if (this.specimens === undefined) {\n      return [];\n    }\n    const specs = this.specimens.filter((s: Specimen) => s.subject === id);\n    return specs;\n  }\n\n  getConditionById(id: number): Condition | undefined {\n    if (this.conditions === undefined) {\n      return undefined;\n    }\n    const condition = this.conditions.filter((c: Condition) => c.subject === id).pop();\n    return condition;\n  }\n\n  ngOnInit(): void {\n\n    this.fhirService.getServerStatus().subscribe(status => {\n        this.serverStatus = status;\n      }\n    );\n\n    this.fhirService.getPatients().subscribe((data) => {\n      this.patients = data.entries as Patient[];\n      // console.log(this.patients);\n    });\n\n    this.fhirService.getSpecimens().subscribe((data) => {\n      this.specimens = data.entries as Specimen[];\n      // console.log(this.specimens);\n    });\n\n    this.fhirService.getConditions().subscribe((data) => {\n      this.conditions = data.entries as Condition[];\n      // console.log(this.specimens);\n    });\n\n  }\n\n}\n","<h1>Patients\n  <ng-template #loading>\n    <h2>Loading\n    <div class=\"spinner-border\" role=\"status\">\n      <span class=\"sr-only\">Loading...</span>\n    </div>\n    </h2>\n  </ng-template>\n  <ng-template [ngIf]=\"serverStatus && !serverStatus.status\">\n    &nbsp;<small><i>(Example data)</i></small>\n  </ng-template>\n</h1>\n\n\n<div *ngIf=\"patients else loading\">\n  <div class=\"card mb-3\" *ngFor=\"let pat of patients;\">\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">{{pat.getName()}} ({{pat.gender}})\n        <a [routerLink]=\"['/expression', pat.id]\" class=\"btn btn-outline-success float-sm-right\">Show Gene Expression</a>\n      </h5>\n      <h6 class=\"card-subtitle mb-2 text-muted\">{{pat.birthDate}}</h6>\n      <div class=\"row no-gutters\">\n        <div class=\"col-md-3\">\n          <p class=\"card-text\"><strong>Street: </strong>{{pat.address.line}}</p>\n          <p class=\"card-text\"><strong>City: </strong>{{pat.address.city}}</p>\n          <p class=\"card-text\"><strong>Zip code: </strong>{{pat.address.postalCode}}</p>\n          <p class=\"card-text\"><strong>County: </strong>{{pat.address.district}}</p>\n          <p class=\"card-text\"><strong>State: </strong>{{pat.address.state}}</p>\n        </div>\n        <div class=\"col-md-9\">\n\n          <div class=\"row mb-3\">\n            <div class=\"col-sm-4\" *ngFor=\"let spec of getSpecimenById(pat.id)\">\n              <div class=\"card border-success \"  >\n                <div class=\"card-header\">{{spec.type.display}} ({{spec.type.code}})</div>\n                <div class=\"card-body\">\n                  <h5 class=\"card-title\">{{spec.note}}</h5>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <ng-container *ngIf=\"getConditionById(pat.id) as cond\">\n              <div class=\"alert alert-success ml-3\">{{cond.code.code}}: {{cond.code.display}}</div>\n            </ng-container>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport {ServerStatus} from '../../models/server-status';\nimport {FhirService} from '../../services/fhir.service';\n\n@Component({\n  selector: 'app-fhir-server',\n  templateUrl: './fhir-server.component.html',\n  styleUrls: ['./fhir-server.component.css']\n})\nexport class FhirServerComponent implements OnInit {\n\n  serverStatus: ServerStatus | undefined;\n  fhirEndpoint: string;\n\n  constructor(private fhirService: FhirService) { }\n\n  ngOnInit(): void {\n    this.fhirEndpoint = this.fhirService.defaultFhirEndpoint;\n    this.fhirService.getServerStatus().subscribe(status => {\n        this.serverStatus = status;\n      }\n    );\n  }\n\n  checkServer(): void {\n    this.serverStatus = undefined;\n    this.fhirService.setFhirEndpoint(this.fhirEndpoint).subscribe(status => {\n        this.serverStatus = status;\n      }\n    );\n  }\n\n  defaultFhirServer(): void {\n    this.fhirEndpoint = this.fhirService.defaultFhirEndpoint;\n    this.checkServer();\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"row h1 mt-3\">\n    <i class=\"topbarIcon\" data-fa-i2svg=\"\">\n      <svg class=\"svg-inline--fa fa-fire fa-w-12\" style=\"height: 50px;color: red;\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"fire\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" data-fa-i2svg=\"\"><path fill=\"currentColor\" d=\"M216 23.86c0-23.8-30.65-32.77-44.15-13.04C48 191.85 224 200 224 288c0 35.63-29.11 64.46-64.85 63.99-35.17-.45-63.15-29.77-63.15-64.94v-85.51c0-21.7-26.47-32.23-41.43-16.5C27.8 213.16 0 261.33 0 320c0 105.87 86.13 192 192 192s192-86.13 192-192c0-170.29-168-193-168-296.14z\"></path></svg>\n    </i>\n    &nbsp;FHIR server settings</div>\n  <div class=\"row\">\n    <h5 class=\"col-md-5 mt-4 ml-0\">Current FHIR server endpoint:</h5>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-md-5 mt-4 ml-0\">\n      <ng-template [ngIf]=\"serverStatus === undefined\">\n        <div class=\"alert alert-secondary\">loading\n          <div class=\"spinner-border\" role=\"status\">\n            <span class=\"sr-only\"></span>\n          </div>\n        </div>\n      </ng-template>\n      <ng-template [ngIf]=\"serverStatus !== undefined\">\n        <div class=\"alert\" [ngClass]=\"{'alert-success': serverStatus.status, 'alert-danger': !serverStatus.status}\">\n          {{serverStatus.fhirEndpoint}}\n\n          <a href=\"{{serverStatus.fhirEndpoint}}\" target=\"_blank\" class=\"btn btn-success float-right btn-sm\">Open</a>\n        </div>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-md-5 mt-4 ml-0\">\n      <div class=\"form-group input-group\">\n        <input\n          type=\"text\" class=\"form-control\" id=\"searchTerm\"\n          [(ngModel)]=\"fhirEndpoint\"\n          name=\"searchTerm\"\n          placeholder=\"{{fhirEndpoint}}\"\n          (keyup.enter)=\"checkServer()\">\n        <div class=\"input-group-append\" id=\"button-addon4\">\n          <button class=\"btn btn-secondary\" (click)=\"defaultFhirServer()\">Default</button>\n          <button class=\"btn btn-primary\" (click)=\"checkServer()\">Update</button>\n        </div>\n      </div>\n      <small id=\"searchTermHelp\" class=\"form-text text-muted ml-1\">Enter a valid url of an FHIR server API endpoint</small>\n    </div>\n  </div>\n\n<!--  <h1>{{serverStatus.status}}</h1>-->\n<!--  <button (click)=\"checkServer()\">Check</button>-->\n</div>\n","import {Specimen} from './specimen';\n\nexport class TableHead {\n  name: string;\n  children: TableHead[];\n\n  patientId: number;\n  specimenId: number;\n\n  get(name: string): TableHead {\n    let res = this.children.filter((t: TableHead) => t.name === name).pop();\n    if (res === undefined) {\n      res = new TableHead(name);\n      this.children.push(res);\n    }\n    return res;\n  }\n\n  getColspan(): number {\n    if (this.children.length === 0) {\n      return 1;\n    } else {\n      let sum = 0;\n      this.children.forEach( c => sum += c.getColspan());\n      return sum;\n    }\n  }\n\n  constructor(name: string) {\n    this.name = name;\n    this.children = [];\n  }\n}\n\n","import {Identifier} from './identifier';\nimport {Coding} from './coding';\nimport {Color} from './color';\n\nexport class Observation {\n  id: string;\n  identifier: Identifier;\n  gene: Coding;\n  subject: number;\n  specimen: number;\n  value: number;\n  derivedFrom: number;\n\n  color: string;\n\n  constructor(data){\n    this.id = data.id;\n    this.identifier = new Identifier(data.identifier[0]);\n    this.gene = new Coding(data.extension[0].valueCodeableConcept.coding[0]);\n    this.subject = Number(data.subject.reference.split('/').pop());\n    this.specimen = Number(data.specimen.reference.split('/').pop());\n    // Correct the multiplication for being an integer\n    // 8.04957732029089\n    // x*10E6\n    this.value = Number(data.valueInteger) / 1000000;\n    this.color = Color.getColor(this.value);\n\n    this.derivedFrom = Number(data.derivedFrom[0].reference.split('/').pop());\n    // console.log(this);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {Color} from '../../models/color';\n\n@Component({\n  selector: 'app-expression-legend',\n  templateUrl: './expression-legend.component.html',\n  styleUrls: ['./expression-legend.component.css']\n})\nexport class ExpressionLegendComponent implements OnInit {\n\n  minColor = Color.getColor(0);\n  maxColor = Color.getColor(10);\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n<table class=\"table table-borderless\">\n  <thead>\n  <tr>\n    <th colspan=\"3\"><h5>Gene expression:</h5></th>\n  </tr>\n  </thead>\n  <tbody>\n  <tr>\n    <td colspan=\"3\" style=\"background: linear-gradient(to right, {{minColor}} 0%, {{maxColor}} 100%);\"></td>\n  </tr>\n\n  <tr>\n    <td>0</td>\n    <td><i></i></td>\n    <td style=\"text-align: right;\">10</td>\n  </tr>\n  </tbody>\n</table>\n</div>\n","export class Coding {\n  system: string;\n  code: string;\n  display: string;\n\n  constructor(data){\n    this.system = data.system;\n    this.code = data.code;\n    this.display = data.display;\n  }\n}\n","import {Identifier} from './identifier';\nimport {Coding} from './coding';\n\nexport class Specimen {\n  id: number;\n  identifier: Identifier;\n  type: Coding;\n  subject: number;\n  note: string;\n\n  constructor(data){\n    this.id = Number(data.id);\n    this.identifier = new Identifier(data.identifier[0]);\n    this.type = new Coding(data.type.coding[0]);\n    this.subject = Number(data.subject.reference.split('/').pop());\n    this.note = data.note[0].text;\n    // console.log(this);\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}